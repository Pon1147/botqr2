// commands/pay.js - User Command (Seller t·∫°o invoice cho buyer)
const { SlashCommandBuilder, EmbedBuilder } = require("discord.js");

module.exports = {
  data: new SlashCommandBuilder()
    .setName("pay")
    .setDescription("T·∫°o y√™u c·∫ßu thanh to√°n (seller t·∫°o invoice cho buyer)")
    .addUserOption((option) =>
      option
        .setName("buyer")
        .setDescription("Ng∆∞·ªùi tr·∫£ ti·ªÅn (buyer)")
        .setRequired(true)
    ) // Option buyer (ng∆∞·ªùi tr·∫£)
    .addIntegerOption((option) =>
      option.setName("amount").setDescription("S·ªë ti·ªÅn (VNƒê)").setRequired(true)
    )
    .addStringOption((option) =>
      option
        .setName("description")
        .setDescription("M√¥ t·∫£ giao d·ªãch")
        .setRequired(true)
    ),
  adminOnly: false,
  async execute(
    interaction,
    userQrData,
    paymentsData,
    saveQrData,
    savePaymentsData,
    logMessage,
    QRCode,
    AttachmentBuilder,
    createQrEmbed,
    createEditButtons
  ) {
    const buyer = interaction.options.getUser("buyer");
    const amount = interaction.options.getInteger("amount");
    const description = interaction.options.getString("description");
    const sellerId = interaction.user.id; // Ng∆∞·ªùi g·ªçi = seller
    const buyerId = buyer.id; // Option = buyer
    const sellerTag = interaction.user.tag;
    const buyerTag = buyer.tag;
    const txId = `TX${Date.now()}${Math.random()
      .toString(36)
      .substr(2, 5)
      .toUpperCase()}`;

    // Ki·ªÉm tra seller c√≥ QR
    if (!userQrData.has(sellerId)) {
      return interaction.reply({
        content: "B·∫°n (seller) ch∆∞a set QR! D√πng /setqr tr∆∞·ªõc.",
        ephemeral: true,
      });
    }

    const newTx = {
      id: txId,
      sellerId,
      buyerId,
      amount,
      description,
      status: "pending",
      date: new Date().toISOString(),
    };

    paymentsData.unshift(newTx);
    await savePaymentsData();

    const embed = new EmbedBuilder()
      .setTitle("üí≥ Y√™u c·∫ßu thanh to√°n (Invoice)")
      .addFields(
        { name: "M√£ TX", value: txId, inline: true },
        {
          name: "S·ªë ti·ªÅn",
          value: `${amount.toLocaleString()} VNƒê`,
          inline: true,
        },
        { name: "T·ª´ (Buyer)", value: `<@${buyerId}>`, inline: true },
        { name: "ƒê·∫øn (Seller)", value: `<@${sellerId}>`, inline: true },
        { name: "M√¥ t·∫£", value: description },
        { name: "Tr·∫°ng th√°i", value: "‚è≥ Ch·ªù buyer qu√©t QR v√† admin x√°c nh·∫≠n" }
      )
      .setColor("Blue")
      .setTimestamp();

    await logMessage(
      `[pay] Seller ${sellerTag} (${sellerId}) t·∫°o TX ${txId} cho Buyer ${buyerTag} (${buyerId}): ${amount} VNƒê - ${description}`
    );
    await interaction.reply({ embeds: [embed], ephemeral: false });
  },
};
